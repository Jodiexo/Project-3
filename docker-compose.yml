volumes:
  postgres_data:

services:
  postgresdb:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DATABASE=chapp_db
      - POSTGRES_PORT=5432
      ## -DATABASE_HOST=127.0.0.1
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      -postgres_data: /var/lib/postgresql/data
    networks:
      - chapp-network

  server:
    build: ./api
    depends_on:
      postgresdb:
        condition: service_healthy
    ports:
      -8080:8080
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DATABASE=chapp_db
      - POSTGRES_PORT=5432
      ## -DATABASE_HOST=127.0.0.1
      - NODE_ENV=development
    volumes:
      - type: bind
        source: ./api
        target: /app/src
    command: npm run start:dev
    networks:
      - chapp-network

  client:
    build: ./ui
    depends_on:
      - server
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./ui
        target: /app/src
    networks:
      - chapp-network

networks:
  chapp-network:
    driver: bridge
